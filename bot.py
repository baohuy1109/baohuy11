from pyrogram import Client, filters
from pyrogram.types import Message
import requests
import time
import os
import logging
from keep_alive import keep_alive
from dotenv import load_dotenv

# Load bi·∫øn m√¥i tr∆∞·ªùng
load_dotenv()

# Logging
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

# Token bot
BOT_TOKEN = os.getenv("6367532329:AAEuSSv8JuGKzJQD6qI431udTvdq1l25zo0")
if not BOT_TOKEN:
    raise ValueError("‚ùå B·∫°n ch∆∞a thi·∫øt l·∫≠p bi·∫øn m√¥i tr∆∞·ªùng BOT_TOKEN")

# Kh·ªüi ƒë·ªông web server ƒë·ªÉ gi·ªØ bot s·ªëng (n·∫øu c·∫ßn)
keep_alive()

# Kh·ªüi t·∫°o client
app = Client("HoangDaiXuBot", bot_token=BOT_TOKEN)

# Th·ªùi gian kh·ªüi ƒë·ªông bot
start_time = time.time()

# /start
@app.on_message(filters.command("start"))
async def start(client, message: Message):
    await message.reply("ü§ñ Bot B·∫£o Huy üë®‚Äçüíª X·ª© s·∫µn s√†ng ph·ª•c v·ª•!\nD√πng /help ƒë·ªÉ xem danh s√°ch l·ªánh.")

# /help
@app.on_message(filters.command("help"))
async def help_command(client, message: Message):
    await message.reply(
        "**üìú Danh s√°ch l·ªánh:**\n"
        "/uid [url fb]\n"
        "/postid [url fb]\n"
        "/2fa [m√£ ch·ªØ]\n"
        "/shareao [uid] [cookies]\n"
        "/tiktok1 [username]\n"
        "/tiktok2 [username]\n"
        "/videott1 [url]\n"
        "/videott2 [url]\n"
        "/folow1 [username]\n"
        "/folow2 [username]\n"
        "/folow3 [username]\n"
        "/like [url]\n"
        "/view [url]\n"
        "/insta [username]\n"
        "/zalo [sdt]\n"
        "/cccd\n"
        "/passport\n"
        "/uptime"
    )

# H√†m ti·ªán √≠ch g·ªçi API c√≥ x·ª≠ l√Ω l·ªói
def safe_request(method, url, **kwargs):
    try:
        res = requests.request(method, url, **kwargs)
        return res.text
    except Exception as e:
        logging.error(f"L·ªói khi g·ªçi API {url}: {e}")
        return f"‚ö†Ô∏è L·ªói khi g·ªçi API: {e}"

# C√°c l·ªánh x·ª≠ l√Ω API
@app.on_message(filters.command("uid"))
async def get_uid(client, message: Message):
    if len(message.command) < 2:
        return await message.reply("‚ùå Vui l√≤ng nh·∫≠p URL Facebook.")
    url = message.command[1]
    await message.reply(safe_request("GET", f"https://example.com/facebook-uid?url={url}"))

@app.on_message(filters.command("postid"))
async def post_id(client, message: Message):
    if len(message.command) < 2:
        return await message.reply("‚ùå Nh·∫≠p URL b√†i vi·∫øt.")
    url = message.command[1]
    await message.reply(safe_request("GET", f"https://hoangdaixu.x10.bz/api/getpostfb.php?key=hoangdaixu&url={url}"))

@app.on_message(filters.command("2fa"))
async def to_2fa(client, message: Message):
    if len(message.command) < 2:
        return await message.reply("‚ùå Nh·∫≠p m√£ 2FA.")
    code = " ".join(message.command[1:])
    await message.reply(safe_request("POST", "https://hoangdaixu.x10.bz/api/to2fa.php?key=hoangdaixuhoangdaixu", data={"code": code}))

@app.on_message(filters.command("shareao"))
async def share_ao(client, message: Message):
    if len(message.command) < 3:
        return await message.reply("‚ùå Nh·∫≠p d·∫°ng: /shareao uid cookies")
    uid = message.command[1]
    cookies = message.command[2]
    await message.reply(safe_request("GET", f"https://hoangdaixu.x10.bz/api/api-shareao.php?cookies={cookies}&uid={uid}"))

@app.on_message(filters.command("tiktok1"))
async def tiktok1(client, message: Message):
    if len(message.command) < 2:
        return await message.reply("‚ùå Nh·∫≠p username TikTok.")
    username = message.command[1]
    await message.reply(safe_request("GET", f"https://hoangdaixu.x10.bz/api/infotiktok.php?key=hoangdaixu&username={username}"))

@app.on_message(filters.command("tiktok2"))
async def tiktok2(client, message: Message):
    if len(message.command) < 2:
        return await message.reply("‚ùå Nh·∫≠p username TikTok.")
    username = message.command[1]
    await message.reply(safe_request("GET", f"https://hoangdaixu.x10.bz/api/infotiktokv2.php?key=hoangdaixu&username={username}"))

@app.on_message(filters.command("videott1"))
async def video_tt1(client, message: Message):
    if len(message.command) < 2:
        return await message.reply("‚ùå Nh·∫≠p URL video TikTok.")
    url = message.command[1]
    await message.reply(safe_request("GET", f"https://hoangdaixu.x10.bz/api/infovideott.php?key=hoangdaixu&urlvideo={url}"))

@app.on_message(filters.command("videott2"))
async def video_tt2(client, message: Message):
    if len(message.command) < 2:
        return await message.reply("‚ùå Nh·∫≠p URL video TikTok.")
    url = message.command[1]
    await message.reply(safe_request("GET", f"https://hoangdaixu.x10.bz/api/infovdttv2.php?key=hoangdaixu&urlvideo={url}"))

@app.on_message(filters.command("folow1"))
async def follow1(client, message: Message):
    if len(message.command) < 2:
        return await message.reply("‚ùå Nh·∫≠p username.")
    username = message.command[1]
    await message.reply(safe_request("GET", f"https://hoangdaixu.x10.bz/api/autofl.php?key=dinhhoang&username={username}"))

@app.on_message(filters.command("folow2"))
async def follow2(client, message: Message):
    if len(message.command) < 2:
        return await message.reply("‚ùå Nh·∫≠p username.")
    username = message.command[1]
    await message.reply(safe_request("GET", f"https://hoangdaixu.x10.bz/api/autofl2.php?key=dinhhoang&username={username}"))

@app.on_message(filters.command("folow3"))
async def follow3(client, message: Message):
    if len(message.command) < 2:
        return await message.reply("‚ùå Nh·∫≠p username.")
    username = message.command[1]
    await message.reply(safe_request("GET", f"https://hoangdaixu.x10.bz/api/dinhhoang.php?key=toladinhhoang&username={username}"))

@app.on_message(filters.command("like"))
async def like(client, message: Message):
    if len(message.command) < 2:
        return await message.reply("‚ùå Nh·∫≠p link video.")
    url = message.command[1]
    await message.reply(safe_request("GET", f"https://hoangdaixu.x10.bz/api/cronview.php?key=hoangdaixu&link={url}&type=like"))

@app.on_message(filters.command("view"))
async def view(client, message: Message):
    if len(message.command) < 2:
        return await message.reply("‚ùå Nh·∫≠p link video.")
    url = message.command[1]
    await message.reply(safe_request("GET", f"https://hoangdaixu.x10.bz/api/cronview.php?key=hoangdaixu&link={url}&type=view"))

@app.on_message(filters.command("insta"))
async def insta(client, message: Message):
    if len(message.command) < 2:
        return await message.reply("‚ùå Nh·∫≠p username Instagram.")
    username = message.command[1]
    await message.reply(safe_request("GET", f"https://hoangdaixu.x10.bz/api/infoins.php?key=hoangdaixu&username={username}"))

@app.on_message(filters.command("zalo"))
async def zalo(client, message: Message):
    if len(message.command) < 2:
        return await message.reply("‚ùå Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i.")
    sdt = message.command[1]
    await message.reply(safe_request("GET", f"https://hoangdaixu.x10.bz/api/zalo.php?key=hoangdaixu&sdt={sdt}"))

# CCCD & Passport
@app.on_message(filters.command("cccd"))
async def cccd(client, message: Message):
    await message.reply("üîñ T·∫°o CCCD ·∫£o t·∫°i:\nhttps://hoangdaixu.x10.bz/cccd/")

@app.on_message(filters.command("passport"))
async def passport(client, message: Message):
    await message.reply("üõÇ T·∫°o h·ªô chi·∫øu ·∫£o t·∫°i:\nhttps://hoangdaixu.x10.bz/passport/")

@app.on_message(filters.command("uptime"))
async def uptime(client, message: Message):
    uptime_seconds = int(time.time() - start_time)
    hours, remainder = divmod(uptime_seconds, 3600)
    minutes, seconds = divmod(remainder, 60)
    await message.reply(f"‚è± Bot ƒë√£ ho·∫°t ƒë·ªông: {hours} gi·ªù {minutes} ph√∫t {seconds} gi√¢y.")

# Ch·∫°y bot
app.run()
